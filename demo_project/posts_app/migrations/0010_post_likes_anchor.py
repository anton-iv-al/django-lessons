# Generated by Django 5.1.2 on 2024-11-01 15:07

from django.apps.registry import Apps
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
import django.db.models.deletion
from django.db import migrations, models


def create_likes_anchors_for_existing_posts(
    apps: Apps, schema_editor: BaseDatabaseSchemaEditor
):
    post_model = apps.get_model("posts_app", "Post")
    anchor_model = apps.get_model("likes_app", "LikesAnchor")

    posts = post_model.objects.filter(likes_anchor__isnull=True)
    for post in posts:
        anchor = anchor_model(anchor_type=1)
        anchor.save()
        post.likes_anchor = anchor
        post.save()
    
def delete_likes_anchors_from_posts(
    apps: Apps, schema_editor: BaseDatabaseSchemaEditor
):    
    post_model = apps.get_model("posts_app", "Post")

    posts = post_model.objects.filter(likes_anchor__isnull=False)
    for post in posts:
        anchor = post.likes_anchor
        post.likes_anchor = None
        post.save()
        anchor.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('likes_app', '0001_initial'),
        ('posts_app', '0009_post_comments_anchor'),
    ]

    operations = [
        migrations.AddField(
            model_name='post',
            name='likes_anchor',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='post', to='likes_app.likesanchor'),
        ),

        migrations.RunPython(create_likes_anchors_for_existing_posts, delete_likes_anchors_from_posts),
    ]
