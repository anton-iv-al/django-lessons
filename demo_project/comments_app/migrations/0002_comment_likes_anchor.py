# Generated by Django 5.1.2 on 2024-11-01 15:07

from django.apps.registry import Apps
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
import django.db.models.deletion
from django.db import migrations, models

def create_likes_anchors_for_existing_comments(
    apps: Apps, schema_editor: BaseDatabaseSchemaEditor
):
    comment_model = apps.get_model("comments_app", "Comment")
    anchor_model = apps.get_model("likes_app", "LikesAnchor")

    comments = comment_model.objects.filter(likes_anchor__isnull=True)
    for comment in comments:
        anchor = anchor_model(anchor_type=2)
        anchor.save()
        comment.likes_anchor = anchor
        comment.save()

def delete_likes_anchors_from_comments(
    apps: Apps, schema_editor: BaseDatabaseSchemaEditor
):    
    comment_model = apps.get_model("comments_app", "Comment")

    comments = comment_model.objects.filter(likes_anchor__isnull=False)
    for comment in comments:
        anchor = comment.likes_anchor
        comment.likes_anchor = None
        comment.save()
        anchor.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('comments_app', '0001_initial'),
        ('likes_app', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='comment',
            name='likes_anchor',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comment', to='likes_app.likesanchor'),
        ),

        migrations.RunPython(create_likes_anchors_for_existing_comments, delete_likes_anchors_from_comments),
    ]
